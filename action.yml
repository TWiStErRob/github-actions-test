name: "test"
description: "test"
inputs:
  some:
    required: false
    default: ''
    description: "Some"
runs:
  using: composite
  steps:
    - name: "Debug"
      env:
        INPUTS: ${{ toJSON(inputs) }}
        SOME: ${{ inputs.some }}
      shell: bash
      run: |
        echo "${INPUTS}"
        echo "x${SOME}x"

    - run: echo "empty"
      if: ${{ inputs.some == '' }}
      shell: bash
    - run: echo "not empty"
      if: ${{ inputs.some != '' }}
      shell: bash
    - run: echo "null"
      if: ${{ inputs.some == null }}
      shell: bash
    - run: echo "not null"
      if: ${{ inputs.some != null }}
      shell: bash

    - run: echo "null is null"
      if: ${{ null == null }}
      shell: bash
    - run: echo "null is not null"
      if: ${{ null != null }}
      shell: bash
    - run: echo "empty is not empty"
      if: ${{ '' != '' }}
      shell: bash
    - run: echo "empty is empty"
      if: ${{ '' == '' }}
      shell: bash
    - run: echo "empty is null"
      if: ${{ '' == null }}
      shell: bash
    - run: echo "empty is not null"
      if: ${{ '' != null }}
      shell: bash
    - run: echo "null is empty"
      if: ${{ null == '' }}
      shell: bash
    - run: echo "null is not empty"
      if: ${{ null != '' }}
      shell: bash

    - run: echo "0 is empty string"
      if: ${{ 0 == '' }}
      shell: bash
    - run: echo "0 is null"
      if: ${{ 0 == null }}
      shell: bash
    - run: echo "array is object"
      if: ${{ fromJSON('[]') == fromJSON('{}') }}
      shell: bash
    - run: echo "JSON null is null?"
      if: ${{ fromJSON('{"a": null}').a == null }}
      shell: bash
    - run: echo "JSON null is empty"
      if: ${{ fromJSON('{"a": null}').a == '' }}
      shell: bash
    - run: echo "JSON empty is empty"
      if: ${{ fromJSON('{"a": ""}').a == '' }}
      shell: bash
    - run: echo "JSON empty is null"
      if: ${{ fromJSON('{"a": ""}').a == null }}
      shell: bash
