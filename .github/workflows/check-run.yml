# Docs: https://docs.github.com/en/rest/checks/runs#create-a-check-run
# Rest: https://octokit.github.io/rest.js/v18#checks-create

# Note: this type of usage for creating check runs has a better way:
# https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary
# The example is still valid if you need to customize things or run arbitrary javascript.

name: Custom Check Run
on:
  workflow_dispatch:
  #push:
jobs:
  build:
    name: ðŸ”¨ Build
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: "Generate content"
        run: echo -e 'my\nstuff\nwith some `code`' > output.txt

      - name: "Create a check run"
        uses: actions/github-script@v6
        env:
          # Workaround for https://github:com/github-community/community/discussions/19069.
          action_workflow_url: 'https://github.com/${{github.repository}}/actions/workflows/check-run-action.yml?query=branch%3A${{github.ref}}'
        with:
          debug: ${{ secrets.ACTIONS_STEP_DEBUG || false }}
          script: |
            const fs = require("fs");
            const contents = fs.readFileSync("output.txt", { encoding: "utf8" });
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head_sha: context.sha,
              name: "my-check-name",
              status: "completed",
              conclusion: "success",
              output: {
                title: "my *check* title",
                summary: `my *check* summary, [My Fake Action](${process.env.action_workflow_url})`,
                text: contents,
              },
              actions: [
                {
                  label: "My Check Action",
                  description: "My check action description.",
                  identifier: "my-check-action",
                },
              ],
            });
