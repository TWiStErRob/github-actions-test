# Docs: https://docs.github.com/en/rest/checks/runs#create-a-check-run
# Rest: https://octokit.github.io/rest.js/v18#checks-create

# Note: this type of usage for creating check runs has a better way:
# https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary
# The example is still valid if you need to customize things or run arbitrary javascript.

name: Custom Check Run
on:
  workflow_dispatch:
  #push:
jobs:
  build:
    name: ðŸ”¨ Build
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: "Generate content"
        run: echo -e 'my\nstuff\nwith some `code` markdown' > output.md

      - name: "Create a check run"
        uses: actions/github-script@v6
        env:
          # Workaround for https://github:com/github-community/community/discussions/19069.
          action_url: 'https://github.com/${{ github.repository }}/actions/workflows/check-run-action.yml?query=branch%3A${{ github.ref }}'
          workflow_url: 'https://github.com/${{ github.repository }}/actions/workflows/check-run.yml'
          workflow_url_action: 'https://github.com/${{ github.repository }}/actions/workflows/check-run-action.yml'
        with:
          debug: ${{ secrets.ACTIONS_STEP_DEBUG || false }}
          script: |
            const fs = require("fs");
            const contents = fs.readFileSync("output.md", { encoding: "utf8" });
            // https://docs.github.com/en/rest/checks/runs#create-a-check-run
            const m = `
                  my *check* summary
                  
                  This link is a [Fake Action](${process.env.action_url})
                  as workaround for \`checks.create.actions\` not triggering \`check_run.requested_action\` workflows.
                  Semantically it's useful to get additional separate approvals/rejections for each commit.
                  e.g. review a dependency diff or warning list.
                  
                  This summary and check run was produced by [check-run.yml](${process.env.workflow_url}).
                  
                  It also creates a friend commit status as pending and a link to this summary.
                  [check-run-action.yml](${process.env.workflow_url_action}) will rewrite this commit status as success/failure.
            `;
            console.log(m)
            console.log(m.replaceAll(/^\s+/mg, ""))
            const created = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head_sha: context.sha,
              name: "my-check-name",
              status: "completed",
              conclusion: "action_required",
              output: {
                title: "my *check* title",
                summary: `
                  my *check* summary
                  
                  This link is a [Fake Action](${process.env.action_url})
                  as workaround for \`checks.create.actions\` not triggering \`check_run.requested_action\` workflows.
                  Semantically it's useful to get additional separate approvals/rejections for each commit.
                  e.g. review a dependency diff or warning list.
                  
                  This summary and check run was produced by [check-run.yml](${process.env.workflow_url}).
                  
                  It also creates a friend commit status as pending and a link to this summary.
                  [check-run-action.yml](${process.env.workflow_url_action}) will rewrite this commit status as success/failure.
                `.replaceAll(/^\s+/mg, ""),
                text: contents,
              },
              actions: [
                {
                  label: "My Check Action",
                  description: "My check action description.",
                  identifier: "my-check-action",
                },
              ],
            });
            // https://docs.github.com/en/rest/commits/statuses#create-a-commit-status
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              context: 'my-check-name-reference',
              description: "Link to check run.",
              state: "pending",
              target_url: created.data.html_url,
            });
