# https://docs.github.com/en/actions/using-workflows/storing-workflow-data-as-artifacts fails to deliver
# TODO Report success: https://github.community/t/how-to-access-github-actions-log-of-current-run-from-a-later-step-job/183846/5

name: Logs
on:
  workflow_dispatch:
  #push:
jobs:
  build:
    name: ðŸ”¨ Build
    runs-on: ubuntu-latest
    timeout-minutes: 2
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idoutputs
    outputs:
      # https://docs.github.com/en/actions/learn-github-actions/contexts#steps-context
      job_run_id: ${{ steps.get-job-run-id.outputs.result }}
    steps:
      - name: Checkout ${{ github.ref }} branch in ${{ github.repository }} repository.
        uses: actions/checkout@v3

      - name: Build & Verify project.
        run: |
          echo "dummy test output"
        
      # Workaround from https://github.community/t/get-action-job-id/17365/10?u=twisterrob
      - name: "Get job's run id."
        id: get-job-run-id
        uses: actions/github-script@v6
        with:
          script: |
            const script = require('./.github/workflows/logs/get-job-run-id.js');
            return await script({github, context}, 'ðŸ”¨ Build');

  validate-logs:
    name: âš  Validate logs
    runs-on: ubuntu-latest
    timeout-minutes: 1
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idneeds
    needs: [ build ]
    # https://docs.github.com/en/actions/learn-github-actions/expressions#status-check-functions
    if: success() || failure()
    steps:

      - name: Checkout ${{ github.ref }} branch in ${{ github.repository }} repository.
        uses: actions/checkout@v3

      - name: "Download logs for job#build run#${{ needs.build.outputs.job_run_id }}"
        id: download-log
        uses: actions/github-script@v6
        with:
          script: |
            const job_run_id = ${{needs.build.outputs.job_run_id}};
            const script = require('./.github/workflows/logs/download-job-log.js');
            return await script({github, context}, job_run_id);

      - name: "Dump log to a file."
        run: |
          cat << 'EOF-FOR-GET-JOB-ID' > dump.log
          ${{ steps.download-log.outputs.result }}
          EOF-FOR-GET-JOB-ID

      - name: "ll"
        run: ls -la

      - name: "Verify logs"
        run: |
          ./.github/workflows/logs/validate-logs.sh
