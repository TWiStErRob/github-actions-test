name: Logs
on:
  push:
jobs:
  build:
    name: ðŸ”¨ Build
    runs-on: ubuntu-latest
    timeout-minutes: 2
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idoutputs
    outputs:
      # https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
      run_id: ${{ github.job }}
    steps:
      - name: Checkout ${{ github.ref }} branch in ${{ github.repository }} repository.
        uses: actions/checkout@v3

      - name: Build & Verify project.
        run: >
          echo "dummy test output"

      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'
        
      - name: "Get 'me'"
        uses: actions/github-script@v6
        with:
          script: |
            // Available variables: https://github.com/actions/github-script#actionsgithub-script
            // Rest API Docs: https://docs.github.com/en/rest/actions/workflow-jobs#list-jobs-for-a-workflow-run
            // Rest JS API: https://octokit.github.io/rest.js/v18#actions-list-jobs-for-workflow-run
            const result = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.run_id }},
            });
            // https://github.com/actions/github-script#download-data-from-a-url
            //const diff_url = context.payload.pull_request.diff_url
            //const result = await github.request(diff_url)
            console.log(result.data.jobs[0])

  validate-logs:
    name: âš  Validate logs
    runs-on: ubuntu-latest
    timeout-minutes: 1
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idneeds
    needs: [ build ]
    # https://docs.github.com/en/actions/learn-github-actions/expressions#status-check-functions
    if: success() || failure()
    steps:
    
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'

      - name: "Download logs for build#${{ needs.build.outputs.run_id }}"
        uses: actions/github-script@v6
        with:
          script: |
            // Note: "Download workflow run logs (/actions/runs/{run_id}/logs) is not working, because the workflow run didn't complete yet.
            // Have to use job run instead.
            // Available variables: https://github.com/actions/github-script#actionsgithub-script
            // Rest API Docs: https://docs.github.com/en/rest/actions/workflow-runs#download-workflow-run-logs
            // Rest JS API: https://octokit.github.io/rest.js/v18#actions-download-workflow-run-logs
            // Using Rest API example: https://github.com/actions/github-script#using-a-separate-github-token
            const result = await github.rest.actions.downloadWorkflowRunLogs({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ needs.build.outputs.run_id }},
            });
            // https://github.com/actions/github-script#download-data-from-a-url
            /*await octokit.request('GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs', {
              owner: 'OWNER',
              repo: 'REPO',
              run_id: 'RUN_ID'
            })*/
            //const diff_url = context.payload.pull_request.diff_url
            //const result = await github.request(diff_url)
            console.log(result)

      - name: "ll"
        run: ls -la

      - name: "Verify logs"
        run: >
          grep -re 'dummy' *.log
