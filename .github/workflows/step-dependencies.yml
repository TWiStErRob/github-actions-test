# Dependencies and set-output is awesome, but it's easy to make a mistake when substituting text into text and then executing it as code.
# To get structure and somewhat typed, it's better to use fromJSON to gain strictness.

# Note: always() is not relevant here, just there to continue even when erroring.

name: Step Dependencies
on:
  workflow_dispatch:
  #push:
jobs:
  build:
    name: ðŸ”¨ Build
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: "Do something (success)"
        id: my-passed-step
        run: |
          echo ::set-output name=result-success::true
          echo ::set-output name=result-text::Some message

      - name: "Do something (failure)"
        id: my-failed-step
        run: |
          echo ::set-output name=result-success::false
          echo ::set-output name=result-text::Some message
      - name: "Print everything"
        run: |
          echo "steps.my-passed-step: raw=${{ steps.my-passed-step.outputs.result-success }}, toJSON=${{ toJSON(steps.my-passed-step.outputs.result-success) }} -> toJSON(fromJSON)=${{ toJSON(fromJSON(steps.my-passed-step.outputs.result-success)) }}"
          echo "steps.my-failed-step: raw=${{ steps.my-failed-step.outputs.result-success }}, toJSON=${{ toJSON(steps.my-failed-step.outputs.result-success) }} -> toJSON(fromJSON)=${{ toJSON(fromJSON(steps.my-failed-step.outputs.result-success)) }}"
          echo "steps.my-missing-step: raw=${{ steps.my-missing-step.outputs.result-success }}, toJSON=${{ toJSON(steps.my-missing-step.outputs.result-success) }} -> toJSON(fromJSON)=Error reading JToken from JsonReader."

      - name: "Print success output"
        if: always() && fromJSON(steps.my-passed-step.outputs.result-success)
        run: >
          echo Result: ${{ steps.my-passed-step.outputs.result-text }}.

      - name: "Print failed output (negated to make it execute)"
        if: always() && !fromJSON(steps.my-failed-step.outputs.result-success)
        run: >
          echo Result: ${{ steps.my-failed-step.outputs.result-text }}.

      - name: "Print missing output"
        # This will fail because fromJSON(null) is an error.
        if: always() && fromJSON(steps.my-missing-step.outputs.result-success)
        run: >
          echo Result: ${{ steps.my-missing-step.outputs.result-text }}.

      - name: "Print missing output (negated to see how 'nothing translates to boolean')"
        # This will fail because fromJSON(null) is an error.
        if: always() && !fromJSON(steps.my-missing-step.outputs.result-success)
        run: >
          echo Result: ${{ steps.my-missing-step.outputs.result-text }}.
