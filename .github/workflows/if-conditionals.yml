name: If Conditional Expressions

on:
  workflow_dispatch:
  push:

jobs:
  ifs:
    name: Ifs
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:

      - name: "Generate content"
        id: step1
        run: |
          echo 'out-value=something' >> $GITHUB_OUTPUT

      - name: "Outputs"
        env:
          STEP1_OUTPUTS: ${{ toJSON(steps.step1.outputs) }}
        run: echo $STEP1_OUTPUTS

      - name: "YAML formatted GitHub expressions without ${{ '${{ }}' }}"
        run: 'true'

      - name: ": ' Expecting execution for simple `a == a` comparison."
        if: '''something'' == ''something'''
        run: echo Executed

      - name: ": ' Expecting skip for simple `a == b` comparison."
        if: '''something'' == ''something-else'''
        run: echo Executed

      - name: ": \" Expecting execution for simple `a == a` comparison."
        if: "'something' == 'something'"
        run: echo Executed

      - name: ": \" Expecting skip for simple `a == b` comparison."
        if: "'something' == 'something-else'"
        run: echo Executed

      - name: "YAML unformatted GitHub expression opting to not include ${{ '${{ }}' }}"
        run: 'true'

      - name: ": Expecting execution for variable-based `a == a` comparison."
        if: steps.step1.outputs.out-value == 'something'
        run: echo Executed

      - name: ": Expecting skip for variable-based `a == b` comparison."
        if: steps.step1.outputs.out-value == 'something-else'
        run: echo Executed

      - name: "YAML unformatted GitHub expression opting to include ${{ '${{ }}' }}"
        run: 'true'

      - name: ": ${ Expecting execution for variable-based `a == a` comparison."
        if: ${{ steps.step1.outputs.out-value == 'something' }}
        run: echo Executed

      - name: ": ${ Expecting skip for variable-based `a == b` comparison."
        if: ${{ steps.step1.outputs.out-value == 'something-else' }}
        run: echo Executed

      #- name: ": ${ Expecting compile fail, because only single quotes are allowed in GHA expressions."
      #  if: ${{ steps.step1.outputs.out-value == "something" }}
      #  run: echo Executed

      - name: "Buggy behavior if you expect what it reads!"
        # These are equivalent to if: "'something == \"something-else\"'"
        # i.e. a `if` evaluates a string value as truthy, always! Run with debug to see it in action.
        run: 'true'

      - name: ": ${ Expecting execution (false positive)."
        if: ${{ steps.step1.outputs.out-value }} == "something"
        run: echo Executed

      - name: ": ${ Expecting skip, but executes."
        if: ${{ steps.step1.outputs.out-value }} == "something-else"
        run: echo Executed

      - name: ": ${ Expecting execution (false positive)."
        if: ${{ steps.step1.outputs.out-value }} == 'something'
        run: echo Executed

      - name: ": ${ Expecting skip, but executes."
        if: ${{ steps.step1.outputs.out-value }} == 'something-else'
        run: echo Executed

      - name: "Leading and trailing spaces"
        # These are equivalent to if: "'something == \"something-else\"'"
        # i.e. a `if` evaluates a string value as truthy, always! Run with debug to see it in action.
        run: 'true'

      - name: ":     Expecting execution, no curly, leading and trailing spaces"
        if:   steps.step1.outputs.out-value == 'something'   
        run: echo Executed

      - name: ":    ${ Expecting execution, curly, leading and trailing spaces"
        if:   ${{ steps.step1.outputs.out-value == 'something' }}   
        run: echo Executed

      - name: ":     Expecting skip, no curly, leading and trailing spaces"
        if:   steps.step1.outputs.out-value == 'something-else'   
        run: echo Executed

      - name: ":    ${ Expecting skip, curly, leading and trailing spaces"
        if:    ${{ steps.step1.outputs.out-value == 'something-else' }}   
        run: echo Executed

      - name: "YAML block scalars: buggy behavior if you expect what it reads!"
        # These are equivalent to if: "true\n" or if: "false\n"
        # i.e. a `if` evaluates a string value as truthy, always! Run with debug to see it in action.
        run: 'true'

      - name: ": > ${ Expecting execution (false positive)."
        if: >
          ${{ steps.step1.outputs.out-value == 'something' }}
        run: echo Executed

      - name: ": > ${ Expecting skip, but executes."
        if: >
          ${{ steps.step1.outputs.out-value == 'something-else' }}
        run: echo Executed

      - name: ": > ${ Expecting execution (false positive)."
        if: >
          ${{
            steps.step1.outputs.out-value
            ==
            'something'
          }}
        run: echo Executed

      - name: ": > ${ Expecting skip, but executes."
        if: >
          ${{
            steps.step1.outputs.out-value
            ==
            'something-else'
          }}
        run: echo Executed

      - name: ": | ${ Expecting execution (false positive)."
        if: |
          ${{ steps.step1.outputs.out-value == 'something' }}
        run: echo Executed

      - name: ": | ${ Expecting skip, but executes."
        if: |
          ${{ steps.step1.outputs.out-value == 'something-else' }}
        run: echo Executed

      - name: ": | ${ Expecting execution (false positive)."
        if: |
          ${{
            steps.step1.outputs.out-value
            ==
            'something'
          }}
        run: echo Executed

      - name: ": | ${ Expecting skip, but executes."
        if: |
          ${{
            steps.step1.outputs.out-value
            ==
            'something-else'
          }}
        run: echo Executed

      - name: "YAML block scalars (working cases)"
        # The only difference is the minus sign, that removes the new line(s) and evaluates the boolean correctly.
        run: 'true'

      - name: ": ${ Expecting execution, because it's true."
        if: ${{
              steps.step1.outputs.out-value == 'something'
            }}
        run: echo Executed

      - name: ": ${ Expecting skip, because it's false."
        if: ${{
              steps.step1.outputs.out-value == 'something-else'
            }}
        run: echo Executed

      - name: ": ${ Expecting execution, because it's true."
        if: ${{
              steps.step1.outputs.out-value
              ==
              'something'
            }}
        run: echo Executed

      - name: ": ${ Expecting skip, because it's false."
        if: ${{
              steps.step1.outputs.out-value
              ==
              'something-else'
            }}
        run: echo Executed

      - name: ": >- ${ Expecting execution, because it's true."
        if: >-
          ${{ steps.step1.outputs.out-value == 'something' }}
        run: echo Executed

      - name: ": >- ${ Expecting skip, because it's false."
        if: >-
          ${{ steps.step1.outputs.out-value == 'something-else' }}
        run: echo Executed

      - name: ": >- ${ Expecting execution, because it's true."
        if: >-
          ${{
            steps.step1.outputs.out-value
            ==
            'something'
          }}
        run: echo Executed

      - name: ": >- ${ Expecting skip, because it's false."
        if: >-
          ${{
            steps.step1.outputs.out-value
            ==
            'something-else'
          }}
        run: echo Executed

      - name: ": |- ${ Expecting execution, because it's true."
        if: |-
          ${{ steps.step1.outputs.out-value == 'something' }}
        run: echo Executed

      - name: ": |- ${ Expecting skip, because it's false."
        if: |-
          ${{ steps.step1.outputs.out-value == 'something-else' }}
        run: echo Executed

      - name: ": |- ${ Expecting execution, because it's true."
        if: |-
          ${{
            steps.step1.outputs.out-value
            ==
            'something'
          }}
        run: echo Executed

      - name: "|- ${ Expecting skip, because it's false."
        if: |-
          ${{
            steps.step1.outputs.out-value
            ==
            'something-else'
          }}
        run: echo Executed


      - name: "YAML block scalars without curlies: buggy behavior if you expect what it reads!"
        # These are equivalent to if: "true\n" or if: "false\n"
        # i.e. a `if` evaluates a string value as truthy, always! Run with debug to see it in action.
        run: 'true'

      - name: ": > Expecting execution, because it's true."
        if: >
          steps.step1.outputs.out-value == 'something'
        run: echo Executed

      - name: ": > Expecting skip, because it's false."
        if: >
          steps.step1.outputs.out-value == 'something-else'
        run: echo Executed

      - name: ": > Expecting execution, because it's true."
        if: >
          steps.step1.outputs.out-value
          ==
          'something'
        run: echo Executed

      - name: ": > Expecting skip, because it's false."
        if: >
          steps.step1.outputs.out-value
          ==
          'something-else'
        run: echo Executed

      - name: ": | Expecting execution, because it's true."
        if: |
          steps.step1.outputs.out-value == 'something'
        run: echo Executed

      - name: ": | Expecting skip, because it's false."
        if: |
          steps.step1.outputs.out-value == 'something-else'
        run: echo Executed

      - name: ": | Expecting execution, because it's true."
        if: |
          steps.step1.outputs.out-value
          ==
          'something'
        run: echo Executed

      - name: ": | Expecting skip, because it's false."
        if: |
          steps.step1.outputs.out-value
          ==
          'something-else'
        run: echo Executed

      - name: "YAML block scalars (working cases) without curlies"
        # The only difference is the minus sign, that removes the new line(s) and evaluates the boolean correctly.
        run: 'true'

      - name: ": >- Expecting execution, because it's true."
        if: >-
          steps.step1.outputs.out-value == 'something'
        run: echo Executed

      - name: ": >- Expecting skip, because it's false."
        if: >-
          steps.step1.outputs.out-value == 'something-else'
        run: echo Executed

      - name: ": >- Expecting execution, because it's true."
        if: >-
          steps.step1.outputs.out-value
          ==
          'something'
        run: echo Executed

      - name: ": >- Expecting skip, because it's false."
        if: >-
          steps.step1.outputs.out-value
          ==
          'something-else'
        run: echo Executed

      - name: ": |- Expecting execution, because it's true."
        if: |-
          steps.step1.outputs.out-value == 'something'
        run: echo Executed

      - name: ": |- Expecting skip, because it's false."
        if: |-
          steps.step1.outputs.out-value == 'something-else'
        run: echo Executed

      - name: ": |- Expecting execution, because it's true."
        if: |-
          steps.step1.outputs.out-value
          ==
          'something'
        run: echo Executed

      - name: ": |- Expecting skip, because it's false."
        if: |-
          steps.step1.outputs.out-value
          ==
          'something-else'
        run: echo Executed
